{"version":3,"sources":["./src/app/certifier-homepage/certifier-homepage.module.ts","./src/app/certifier-homepage/certifier-homepage.page.scss","./src/app/certifier-homepage/certifier-homepage-routing.module.ts","./src/app/certifier-homepage/certifier-homepage.page.ts","./src/app/certifier-homepage/certifier-homepage.page.html"],"names":[],"mappings":"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","file":"certifier-homepage-certifier-homepage-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CertifierHomepagePageRoutingModule } from './certifier-homepage-routing.module';\n\nimport { CertifierHomepagePage } from './certifier-homepage.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CertifierHomepagePageRoutingModule\n  ],\n  declarations: [CertifierHomepagePage]\n})\nexport class CertifierHomepagePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjZXJ0aWZpZXItaG9tZXBhZ2UucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CertifierHomepagePage } from './certifier-homepage.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CertifierHomepagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CertifierHomepagePageRoutingModule {}\n","import { Component, OnInit,Inject,NgZone} from '@angular/core';\nimport { default as contract } from \"truffle-contract\";\nconst ricecertificate_artifacts = require('../../../build/contracts/RiceCertificate.json');\nvar RiceCertificate = contract(ricecertificate_artifacts);\nimport { Web3Service } from '../web3.service';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport Web3 from 'web3';\nvar metamaskAddress, deployedRiceCertificate;\n\nvar sessionarray = [];\n@Component({\n  selector: 'app-certifier-homepage',\n  templateUrl: './certifier-homepage.page.html',\n  styleUrls: ['./certifier-homepage.page.scss'],\n})\nexport class CertifierHomepagePage implements OnInit {\n  accounts: string[];\n  // private visibility: boolean = false;\n  visibility:boolean = false;\n  model = {\n    account: '',\n  };\n  public sessionarray: any[];\n  RiceCertificate: any;\n  data: any;\n  tablevaleany: any = [];\n  constructor(private web3Service: Web3Service,\n    private router: Router,\n    private ngZone:NgZone,\n    public alertController: AlertController,\n    @Inject(Web3Service) public web3: Web3) { }\n    ngOnInit() {\n      console.log('Accounts getting in modal open');\n      console.log('OnInit: ')\n      console.log(this.web3Service);\n      console.log('Account: ')\n      this.watchAccount();\n      this.web3Service.artifactsToContract(ricecertificate_artifacts)\n        .then((RiceCertificateAbstraction) => {\n          this.RiceCertificate = RiceCertificateAbstraction;\n          this.RiceCertificate.deployed().then(deployed => {\n            console.log(deployed);\n            // deployed.Transfer({}, (err, ev) => {\n            console.log('Transfer event came in, refreshing balance');\n            // this.refreshBalance();\n            // });\n            this.viewApplicationinTable();\n          });\n\n        });\n\n\n\n\n    }\n    //get metamask accounts\n    watchAccount() {\n      this.web3Service.accountsObservable.subscribe((accounts) => {\n        console.log(\"in watchAccount accountsObservable jisa\"); //16\n        this.accounts = accounts;\n        this.model.account = accounts.toString();\n        console.log(\"accounts:\" + this.model.account); //17\n      });\n    }\n   async viewApplicationinTable(){\n    let data: any;\n    data = await this.getApplications(this.model.account)\n    console.log(\"pkg details\")\n    console.log(data);\n    if(data){\n\n      this.tablevaleany=data;\n      console.log('this.table');\n      console.log(this.tablevaleany)\n    }\n  }\n    //application viewed by a farmer\n\n    async getApplications(metamaskAddress) {\n      console.log(metamaskAddress)\n      const deployedRiceCertificate = await this.RiceCertificate.deployed();\n      return new Promise((res, rej) => {\n      console.log(deployedRiceCertificate);\n      deployedRiceCertificate.retApp.call().then(function(data){\n        console.log(data)\n        // console.log(JSON.parse(data));\n      })\n      deployedRiceCertificate.getApplicationCount.call()\n        .then(function (v) {\n          console.log('GOT FROM BC')\n          console.log(v)\n          console.log(v.c)\n          var appCount = v;\n          //  var candidatesResults = $(\"#candidatesResults\");\n          //  candidatesResults.empty();\n          for (var i = 0; i < appCount; i++) {\n            deployedRiceCertificate.myStructs(i).then(function (rice) {\n              console.log(rice);\n              console.log(Web3)\n               var farm_id = rice[0].c;\n               var farm_owner = rice[1];\n               var address = Web3.prototype.toAscii(rice[2]).replace(/[^ -~]+/g, '');\n              console.log(address)\n              //  //LOCATION DECODED\n               var farmloc =  Web3.prototype.toAscii(rice[3]).replace(/[^ -~]+/g, '');\n              //  var location = Geohash.decode(farmloc);\n              //  var latitude = location.lat;\n              //  var longitude = location.lon;\n              //  console.log('Latitude : ' + latitude + ',Longitude:' + longitude)\n\n              //  var requirement =  Web3.prototype.toAscii(rice[4]).replace(/[^ -~]+/g, '');\n              var requirement =  Web3.prototype.toAscii(rice[4]).replace(/[^ -~]+/g, '');\n\n               var standard =  Web3.prototype.toAscii(rice[5]).replace(/[^ -~]+/g, '');\n               var account = rice[6]\n               var stat =  Web3.prototype.toAscii(rice[7]).replace(/[^ -~]+/g, '')\n               console.log(stat);\n               console.log('ID : ' + farm_id + ' , FARMER : ' + farm_owner + ' ,ADDRESS : ' + address + ',REQUIREMENT : ' + requirement + ',STANDARD:' + standard + ',ACCOUNT' + account);\n                sessionarray.push({\n                'farm_id': farm_id, //farm_id\n                'farm_owner': farm_owner, //cpid\n                'address': address, //address\n                'farmloc': farmloc, //farmloc\n                'requirement': requirement, //requirement\n                'standard': standard, //standard\n                'stat':stat, //stat\n                });\n                // if(stat == 'Pending'){\n                //   this.visibility = true;\n                // }\n                // else{\n                //   this.visibility = false;\n                // }\n                console.log('sessionarray')\n          console.log(sessionarray)\n                res(sessionarray)\n               // Render candidate Result\n              //  var candidateTemplate = \"<tr><th>\" + farm_id + \"</th><td>\" + farm_owner + \"</td><td>\" + address + \"</td><td>\" + latitude + \"</td><td>\" + longitude + \"</td><td>\" + requirement + \"</td><td>\" + standard + \"</td><td>\" + account + \"</td><td>\" + stat + \"</td></tr>\"\n              //  candidatesResults.append(candidateTemplate);\n\n              //     // Render candidate ballot option\n              /*        var candidateOption = \"<option value='\" + farm_id + \"' >\" + farm_owner + \"</ option>\"\n                       candidatesSelect.append(candidateOption);\n              */\n            });\n          }\n\n        })\n      });\n\n\n\n    }\n  viewCompleteData(e){\n    var farmid = e.target.id;\n\n    console.log(e.target.id);\n    this.ngZone.run(()=>this.navigateTo('certifier-certification/',farmid));\n\n  }\n  navigateTo(url,farmid){\n    this.router.onSameUrlNavigation = 'reload';\n\n    this.router.navigate([url+JSON.stringify(farmid)]);\n\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"success\\\">\\n    <ion-title>Welcome Certifier</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n\\n    <ion-grid >\\n      <ion-row class=\\\"header-row\\\" style=\\\"background-color:aliceblue;\\\">\\n        <ion-col >\\n          Farm_ID\\n        </ion-col>\\n        <ion-col >Name</ion-col>\\n        <ion-col >Address</ion-col>\\n        <!-- <ion-col > Location</ion-col>-->\\n          <ion-col >Requirement</ion-col>\\n            <ion-col >Standard</ion-col>\\n              <ion-col >Status</ion-col>\\n      </ion-row>\\n      <ion-row *ngFor = \\\"let data1 of tablevaleany\\\" class=\\\"data-row\\\">\\n        <ion-col >{{ data1.farm_id}}</ion-col>\\n        <ion-col >{{ data1.farm_owner}}</ion-col>\\n    <ion-col >{{data1.address}}</ion-col>\\n        <!-- <ion-col >{{data1.farmloc}}</ion-col>-->\\n        <ion-col >{{data1.requirement}}</ion-col>\\n        <ion-col >{{data1.standard}}</ion-col>\\n        <!-- <ion-col >{{data1.stat}}</ion-col> -->\\n      <ion-button id={{data1.farm_id}} (click)=\\\"viewCompleteData($event)\\\">Check</ion-button>\\n      </ion-row>\\n\\n    </ion-grid>\\n  </ion-card>\\n\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}