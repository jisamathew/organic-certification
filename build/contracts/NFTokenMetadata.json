{
  "contractName": "NFTokenMetadata",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "token",
          "type": "uint256"
        }
      ],
      "name": "logg",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "flagg",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenid",
          "type": "uint256"
        }
      ],
      "name": "logtt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lek",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lekshmi",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "val",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lek",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nbonds",
          "type": "uint256"
        }
      ],
      "name": "safe",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"}],\"name\":\"logg\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"flagg\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenid\",\"type\":\"uint256\"}],\"name\":\"logtt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lek\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lekshmi\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"val\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lek\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nbonds\",\"type\":\"uint256\"}],\"name\":\"safe\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional metadata implementation for ERC-721 non-fungible token standard.\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"}},\"constructor\":{\"details\":\"Contract constructor.\"},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"}},\"safe(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\"},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"constructor\":\"When implementing this contract don't forget to set nftName and nftSymbol.\",\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safe(address,address,uint256)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NFTokenMetadata.sol\":\"NFTokenMetadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ERC721.sol\":{\"keccak256\":\"0x11c353eb2a6b5799950211c5383fbf96a4b3a4bd44bab41f8881eda245f6a8a8\",\"urls\":[\"bzz-raw://94fce4d1224d1ffb60cdd5e57f6ae83ba95fc1a4d4d0eb3f767dafe7804a5ba5\",\"dweb:/ipfs/QmRxL883p3TN3u7N6EoS2kuyfsYVQKdtRS5PjMqoZ1f164\"]},\"project:/contracts/ERC721Metadata.sol\":{\"keccak256\":\"0x794c5f475bc05340a70ffe510cfdf259213345c88e18a7d84c8387c6313349e8\",\"urls\":[\"bzz-raw://7390f622e884eabfdcecc044cc64b8ded7d2217f5beb06851313107b8ea8a335\",\"dweb:/ipfs/QmXfA3zzK5Rye7ZhMQSpLiBwLpRWvoRpoS4sTp1BPisdQU\"]},\"project:/contracts/ERC721TokenReceiver.sol\":{\"keccak256\":\"0x7551a04f61c68b284b530fa764b78b276163b3f03199592ca0e9e9be9741d288\",\"urls\":[\"bzz-raw://793602f25ce837282841b91fd3935111141d726eed9be49220b2d57dcff28634\",\"dweb:/ipfs/QmRxWhfHY4Ukqg9KMeBmguW6j7kfiEzRAi6CLhGUvN9wVb\"]},\"project:/contracts/NFToken.sol\":{\"keccak256\":\"0x4b4a2e4ee4bcbc418b4f8e5781be8dfa263b836321e96820047212442a2a2845\",\"urls\":[\"bzz-raw://0caa754b39dc552c5c38805cc9f2a4c58f4a956d8a14f3cc3affaa37e57a9388\",\"dweb:/ipfs/QmTx2sxkyFspWT8oC4rWTB3A3DDKeigx5hQZNwYXCQb8UZ\"]},\"project:/contracts/NFTokenMetadata.sol\":{\"keccak256\":\"0x9f1358e361769a049999de7dc4249710265ef3b1e88d5dbd5a38c2eb63ec9d67\",\"urls\":[\"bzz-raw://e51ead6c9a63b1cb73b509e276c3a16486476696d54303c14ffa45fdb411401e\",\"dweb:/ipfs/QmNZmNgz5KCg15EiDwnQc3WHuHtG2Zypov2SyVnNDAaaSm\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x551b9253d5a07a2d55efd714543421a718a0c8db41eff83ae557b8749817af84\",\"urls\":[\"bzz-raw://a46892ac19d5d1bdeae3d12a95ed4c8f1bb2b312af0ac7879ba98b1d3f6f2980\",\"dweb:/ipfs/QmY7jR4CSLR2kwAAFPo7cpnJ1Na8aCV7XoCBnxRa8eQt34\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x672e213026d952b637857457f424464f95d07a94d0305486152f9b85e458a4f0\",\"urls\":[\"bzz-raw://72b5d6a0c30d40ea6c943023c7310f9eadc5741d7f4b29dd9513e738740bd0d6\",\"dweb:/ipfs/QmaRptTH5Hbuqv5vyy6Y1ZJj9KiAp15ECu3ZNrgTwpoQgX\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/utils/ERC165.sol\":{\"keccak256\":\"0xe5b2a89b148ee49f6fba8a47330f05adec5c194a9abaa70acbacf1b7fe58fa95\",\"urls\":[\"bzz-raw://0ab7372c50a21fac1171d9c540be3e757d20130c6c4676a7fb1ae4d29ce12277\",\"dweb:/ipfs/QmdfpaWrwKN9Xm79aZAhPP1mB9Z3wKKSA2v3emTcHVXFir\"]},\"project:/node_modules/@0xcert/ethereum-utils/contracts/utils/SupportsInterface.sol\":{\"keccak256\":\"0x06b8590b15616337fef8f5b772c641fd7f5813e861eb730bd45d3a2b52e14572\",\"urls\":[\"bzz-raw://9f472ed62ffd3b597ca27c67d7fff2fffac703d96fa6b5bd97315f315e7b5c83\",\"dweb:/ipfs/QmS7bgXG94XiaqHxr4hhFeVbL5R3nSe7xWr88iCQTh5yR2\"]}},\"version\":1}",
  "bytecode": "0x6080604052732d617c3b6679113219c98c8efa58074fb4da251b600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b5060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000806380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600080635b5e139f60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550611a4e806101686000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a22cb46511610066578063a22cb465146105c8578063b88d4fde14610618578063c87b56dd146106db578063e985e9c51461078257610100565b806370a08231146104355780638caecbb71461048d57806395d89b41146104d757806397bddb2f1461055a57610100565b806323b872dd116100d357806323b872dd146102a957806342842e0e146103175780634f64b2be146103855780636352211e146103c757610100565b806301ffc9a71461010557806306fdde031461016a578063081812fc146101ed578063095ea7b31461025b575b600080fd5b6101506004803603602081101561011b57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107fe565b604051808215151515815260200191505060405180910390f35b610172610865565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101b2578082015181840152602081019050610197565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102196004803603602081101561020357600080fd5b8101908080359060200190929190505050610907565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a76004803603604081101561027157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109b3565b005b610315600480360360608110156102bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c49565b005b6103836004803603606081101561032d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d04565b005b6103b16004803603602081101561039b57600080fd5b8101908080359060200190929190505050610d24565b6040518082815260200191505060405180910390f35b6103f3600480360360208110156103dd57600080fd5b8101908080359060200190929190505050610d45565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104776004803603602081101561044b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dbc565b6040518082815260200191505060405180910390f35b610495610e3e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104df610e64565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561051f578082015181840152602081019050610504565b50505050905090810190601f16801561054c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105c66004803603606081101561057057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f06565b005b610616600480360360408110156105de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610f16565b005b6106d96004803603608081101561062e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561069557600080fd5b8201836020820111156106a757600080fd5b803590602001918460018302840111640100000000831117156106c957600080fd5b9091929391929390505050610f24565b005b610707600480360360208110156106f157600080fd5b8101908080359060200190929190505050610f7b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561074757808201518184015260208101905061072c565b50505050905090810190601f1680156107745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107e46004803603604081101561079857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061109f565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108fd5780601f106108d2576101008083540402835291602001916108fd565b820191906000526020600020905b8154815290600101906020018083116108e057829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561097757600080fd5b6005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610aac5750600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610ab557600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b2357600080fd5b60006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610b9457600080fd5b856005600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cb957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cf357600080fd5b610cfd83836111a6565b5050505050565b610d1f83838360405180602001604052806000815250611258565b505050565b60028181548110610d3157fe5b906000526020600020016000915090505481565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610db757600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610df757600080fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610efc5780601f10610ed157610100808354040283529160200191610efc565b820191906000526020600020905b815481529060010190602001808311610edf57829003601f168201915b5050505050905090565b610f11838383611269565b505050565b610f20828261140d565b5050565b610f7485858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611258565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610feb57600080fd5b600d60008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110925780601f1061106757610100808354040283529160200191611092565b820191906000526020600020905b81548152906001019060200180831161107557829003601f168201915b5050505050915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156110da57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561111457600080fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506111e98184611548565b6111f38484611838565b828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a48291505092915050565b61126283836111a6565b5050505050565b60008090505b8181101561140757600060066000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106112e557fe5b906000526020600020015490507f8026a9704efe6321bfec7a15f26b062559b256f7e014486dc1ac9034de32080081600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866001604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a16113f9600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868360405180602001604052806000815250611258565b50808060010191505061126f565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561144757600080fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161159157fe5b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501161169957fe5b60006003600083815260200190815260200160002054905060006001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500390506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061174757fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061179f57fe5b9060005260206000200181905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036117ff91906119c8565b50826003600083815260200190815260200160002081905550600060036000868152602001908152602001600020819055505050505050565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118dd6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119ac90919063ffffffff16565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082908060018154018082558091505090600182039060005260206000200160009091929091909150559050600181036003600084815260200190815260200160002081905550505050565b6000808284019050838110156119be57fe5b8091505092915050565b8154818355818111156119ef578183600052602060002091820191016119ee91906119f4565b5b505050565b611a1691905b80821115611a125760008160009055506001016119fa565b5090565b9056fea265627a7a723158204acdceafd322517342376ae4f05635821002465e3842d2a2c36b70b952e3e13464736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a22cb46511610066578063a22cb465146105c8578063b88d4fde14610618578063c87b56dd146106db578063e985e9c51461078257610100565b806370a08231146104355780638caecbb71461048d57806395d89b41146104d757806397bddb2f1461055a57610100565b806323b872dd116100d357806323b872dd146102a957806342842e0e146103175780634f64b2be146103855780636352211e146103c757610100565b806301ffc9a71461010557806306fdde031461016a578063081812fc146101ed578063095ea7b31461025b575b600080fd5b6101506004803603602081101561011b57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107fe565b604051808215151515815260200191505060405180910390f35b610172610865565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101b2578082015181840152602081019050610197565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102196004803603602081101561020357600080fd5b8101908080359060200190929190505050610907565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a76004803603604081101561027157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109b3565b005b610315600480360360608110156102bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c49565b005b6103836004803603606081101561032d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d04565b005b6103b16004803603602081101561039b57600080fd5b8101908080359060200190929190505050610d24565b6040518082815260200191505060405180910390f35b6103f3600480360360208110156103dd57600080fd5b8101908080359060200190929190505050610d45565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104776004803603602081101561044b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dbc565b6040518082815260200191505060405180910390f35b610495610e3e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104df610e64565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561051f578082015181840152602081019050610504565b50505050905090810190601f16801561054c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105c66004803603606081101561057057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f06565b005b610616600480360360408110156105de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610f16565b005b6106d96004803603608081101561062e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561069557600080fd5b8201836020820111156106a757600080fd5b803590602001918460018302840111640100000000831117156106c957600080fd5b9091929391929390505050610f24565b005b610707600480360360208110156106f157600080fd5b8101908080359060200190929190505050610f7b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561074757808201518184015260208101905061072c565b50505050905090810190601f1680156107745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107e46004803603604081101561079857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061109f565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108fd5780601f106108d2576101008083540402835291602001916108fd565b820191906000526020600020905b8154815290600101906020018083116108e057829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561097757600080fd5b6005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610aac5750600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610ab557600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b2357600080fd5b60006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610b9457600080fd5b856005600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cb957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cf357600080fd5b610cfd83836111a6565b5050505050565b610d1f83838360405180602001604052806000815250611258565b505050565b60028181548110610d3157fe5b906000526020600020016000915090505481565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610db757600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610df757600080fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610efc5780601f10610ed157610100808354040283529160200191610efc565b820191906000526020600020905b815481529060010190602001808311610edf57829003601f168201915b5050505050905090565b610f11838383611269565b505050565b610f20828261140d565b5050565b610f7485858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611258565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610feb57600080fd5b600d60008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110925780601f1061106757610100808354040283529160200191611092565b820191906000526020600020905b81548152906001019060200180831161107557829003601f168201915b5050505050915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156110da57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561111457600080fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506111e98184611548565b6111f38484611838565b828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a48291505092915050565b61126283836111a6565b5050505050565b60008090505b8181101561140757600060066000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106112e557fe5b906000526020600020015490507f8026a9704efe6321bfec7a15f26b062559b256f7e014486dc1ac9034de32080081600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866001604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a16113f9600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868360405180602001604052806000815250611258565b50808060010191505061126f565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561144757600080fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161159157fe5b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501161169957fe5b60006003600083815260200190815260200160002054905060006001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500390506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061174757fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061179f57fe5b9060005260206000200181905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036117ff91906119c8565b50826003600083815260200190815260200160002081905550600060036000868152602001908152602001600020819055505050505050565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118dd6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119ac90919063ffffffff16565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082908060018154018082558091505090600182039060005260206000200160009091929091909150559050600181036003600084815260200190815260200160002081905550505050565b6000808284019050838110156119be57fe5b8091505092915050565b8154818355818111156119ef578183600052602060002091820191016119ee91906119f4565b5b505050565b611a1691905b80821115611a125760008160009055506001016119fa565b5090565b9056fea265627a7a723158204acdceafd322517342376ae4f05635821002465e3842d2a2c36b70b952e3e13464736f6c63430005100032",
  "sourceMap": "216:2402:10:-;;;7445:42:8;7424:63;;;;;;;;;;;;;;;;;;;;706:102:10;8:9:-1;5:2;;;30:1;27;20:12;5:2;706:102:10;501:4:16;467:19;:31;487:10;467:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;5084:4:8;5050:19;:31;5070:10;5050:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;779:4:10;745:19;:31;765:10;745:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;216:2402;;;;;;",
  "deployedSourceMap": "216:2402:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;216:2402:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:150:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;658:150:16;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2031:108:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2031:108:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11820:173:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11820:173:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10452:345;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10452:345:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9809:280;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9809:280:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9114:179;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9114:179:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;945:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;945:23:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5745:188;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5745:188:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5353:187;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5353:187:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7424:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2209:116:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2209:116:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6609:141:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6609:141:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11191:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11191:163:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8558:212;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8558:212:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8558:212:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8558:212:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8558:212:8;;;;;;;;;;;;:::i;:::-;;2443:172:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2443:172:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2443:172:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12200:268:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12200:268:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;658:150:16;749:4;770:19;:33;790:12;770:33;;;;;;;;;;;;;;;;;;;;;;;;;;;763:40;;658:150;;;:::o;2031:108:10:-;2082:19;2125:7;2117:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2031:108;:::o;11820:173:8:-;11933:7;11910:8;4946:1;4915:33;;:9;:19;4925:8;4915:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4907:42;;;;;;11963:13;:23;11977:8;11963:23;;;;;;;;;;;;;;;;;;;;;11956:30;;11820:173;;;;:::o;10452:345::-;10556:8;4197:18;4218:9;:19;4228:8;4218:19;;;;;;;;;;;;;;;;;;;;;4197:40;;4269:10;4255:24;;:10;:24;;;:68;;;;4283:16;:28;4300:10;4283:28;;;;;;;;;;;;;;;:40;4312:10;4283:40;;;;;;;;;;;;;;;;;;;;;;;;;4255:68;4247:77;;;;;;10583:8;4946:1;4915:33;;:9;:19;4925:8;4915:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4907:42;;;;;;10607:18;10628:9;:19;10638:8;10628:19;;;;;;;;;;;;;;;;;;;;;10607:40;;10678:10;10665:23;;:9;:23;;;;10657:32;;;;;;10725:9;10699:13;:23;10713:8;10699:23;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;10781:8;10770:9;10749:41;;10758:10;10749:41;;;;;;;;;;;;4959:1;4334;10452:345;;;;:::o;9809:280::-;9934:18;9955:9;:19;9965:8;9955:19;;;;;;;;;;;;;;;;;;;;;9934:40;;10006:5;9992:19;;:10;:19;;;9984:28;;;;;;10045:1;10030:17;;:3;:17;;;;10022:26;;;;;;10058:24;10068:3;10073:8;10058:9;:24::i;:::-;;9809:280;;;;:::o;9114:179::-;9243:43;9261:5;9268:3;9273:8;9243:43;;;;;;;;;;;;:17;:43::i;:::-;9114:179;;;:::o;945:23::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5745:188::-;5829:14;5868:9;:19;5878:8;5868:19;;;;;;;;;;;;;;;;;;;;;5859:28;;5923:1;5905:20;;:6;:20;;;;5897:29;;;;;;5745:188;;;:::o;5353:187::-;5437:7;5486:1;5468:20;;:6;:20;;;;5460:29;;;;;;5506:19;:27;5526:6;5506:27;;;;;;;;;;;;;;;;5499:34;;5353:187;;;:::o;7424:63::-;;;;;;;;;;;;;:::o;2209:116:10:-;2262:21;2309:9;2299:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2209:116;:::o;6609:141:8:-;6719:24;6725:5;6731:3;6735:7;6719:5;:24::i;:::-;6609:141;;;:::o;11191:163::-;11304:39;11323:9;11333;11304:18;:39::i;:::-;11191:163;;:::o;8558:212::-;8717:46;8735:5;8742:3;8747:8;8757:5;;8717:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8717:46:8;;;;;;:17;:46::i;:::-;8558:212;;;;;:::o;2443:172:10:-;2555:13;2510:8;4946:1:8;4915:33;;:9;:19;4925:8;4915:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4907:42;;;;;;2591:7:10;:17;2599:8;2591:17;;;;;;;;;;;2584:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2443:172;;;;:::o;12200:268:8:-;12318:4;12364:1;12346:20;;:6;:20;;;;12338:29;;;;;;12406:1;12385:23;;:9;:23;;;;12377:32;;;;;;12426:16;:24;12443:6;12426:24;;;;;;;;;;;;;;;:35;12451:9;12426:35;;;;;;;;;;;;;;;;;;;;;;;;;12419:42;;12200:268;;;;:::o;13239:305::-;13332:7;13360:12;13375:9;:19;13385:8;13375:19;;;;;;;;;;;;;;;;;;;;;13360:34;;13404:29;13418:4;13424:8;13404:13;:29::i;:::-;13443:25;13454:3;13459:8;13443:10;:25::i;:::-;13503:8;13498:3;13483:29;;13492:4;13483:29;;;;;;;;;;;;13529:8;13522:15;;;13239:305;;;;:::o;12739:315::-;13023:24;13033:3;13038:8;13023:9;:24::i;:::-;;12739:315;;;;:::o;7517:247::-;7594:6;7603:1;7594:10;;7590:168;7607:7;7605:1;:9;7590:168;;;7633:9;7645:10;:15;7656:3;;;;;;;;;;;7645:15;;;;;;;;;;;;;;;7661:1;7645:18;;;;;;;;;;;;;;;;7633:30;;7682:16;7686:1;7688:3;;;;;;;;;;;7692;7696:1;7682:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7712:35;7730:3;;;;;;;;;;;7735:5;7742:1;7712:35;;;;;;;;;;;;:17;:35::i;:::-;7590:168;7615:3;;;;;;;7590:168;;;;7517:247;;;:::o;11359:275::-;11500:1;11479:23;;:9;:23;;;;11471:32;;;;;;11555:9;11513:16;:28;11530:10;11513:28;;;;;;;;;;;;;;;:39;11542:9;11513:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;11606:9;11579:48;;11594:10;11579:48;;;11617:9;11579:48;;;;;;;;;;;;;;;;;;;;;;11359:275;;:::o;16588:810::-;16772:1;16743:19;:26;16763:5;16743:26;;;;;;;;;;;;;;;;:30;16736:38;;;;16842:1;16813:19;:26;16833:5;16813:26;;;;;;;;;;;;;;;;:30;16784:19;:26;16804:5;16784:26;;;;;;;;;;;;;;;:59;;;;16860:9;:19;16870:8;16860:19;;;;;;;;;;;;16853:26;;;;;;;;;;;16923:1;16896:10;:17;16907:5;16896:17;;;;;;;;;;;;;;;:24;;;;:28;16889:36;;;;16935:26;16964:14;:24;16979:8;16964:24;;;;;;;;;;;;16935:53;;16998:22;17050:1;17023:10;:17;17034:5;17023:17;;;;;;;;;;;;;;;:24;;;;:28;16998:53;;17061:17;17081:10;:17;17092:5;17081:17;;;;;;;;;;;;;;;17099:14;17081:33;;;;;;;;;;;;;;;;17061:53;;17164:9;17124:10;:17;17135:5;17124:17;;;;;;;;;;;;;;;17142:18;17124:37;;;;;;;;;;;;;;;:49;;;;17183:10;:17;17194:5;17183:17;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:::i;:::-;;17335:18;17307:14;:25;17322:9;17307:25;;;;;;;;;;;:46;;;;17390:1;17363:14;:24;17378:8;17363:24;;;;;;;;;;;:28;;;;16588:810;;;;;:::o;17659:356::-;17833:3;17811:9;:19;17821:8;17811:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;17873:31;17902:1;17873:19;:24;17893:3;17873:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;17846:19;:24;17866:3;17846:24;;;;;;;;;;;;;;;:58;;;;17914:14;17931:10;:15;17942:3;17931:15;;;;;;;;;;;;;;;17952:8;17931:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17931:30:8;;;;;;;;;;;;;;;;;;;;;17914:47;;18007:1;17998:6;:10;17971:14;:24;17986:8;17971:24;;;;;;;;;;;:37;;;;17659:356;;;:::o;1442:160:12:-;1526:7;1543:9;1560:2;1555;:7;1543:19;;1580:2;1575:1;:7;;1568:15;;;;1596:1;1589:8;;;1442:160;;;;:::o;216:2402:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.4.16 <0.9.0;\n\nimport \"./NFToken.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @dev Optional metadata implementation for ERC-721 non-fungible token standard.\n */\ncontract NFTokenMetadata is\n  NFToken,\n  ERC721Metadata\n{\n\n  /**\n   * @dev A descriptive name for a collection of NFTs.\n   */\n    string internal nftName;\n\n  /**\n   * @dev An abbreviated name for NFTokens.\n   */\n    string internal nftSymbol;\n\n  /**\n   * @dev Mapping from NFT ID to metadata uri.\n   */\n    mapping (uint256 => string) internal idToUri;\n\n  /**\n   * @dev Contract constructor.\n   * @notice When implementing this contract don't forget to set nftName and nftSymbol.\n   */\n    constructor()\n    public\n    {\n        supportedInterfaces[0x5b5e139f] = true; // ERC721Metadata\n    }\n\n  /**\n   * @dev Burns a NFT.\n   * @notice This is a internal function which should be called from user-implemented external\n   * burn function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _owner Address of the NFT owner.\n   * @param _tokenId ID of the NFT to be burned.\n   */\n    function _burn(\n        address _owner,\n        uint256 _tokenId\n    )\n    internal\n    {\n        super._burn(_owner, _tokenId);\n\n        if (bytes(idToUri[_tokenId]).length != 0) {\n            delete idToUri[_tokenId];\n        }\n    }\n\n  /**\n   * @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n   * @notice this is a internal function which should be called from user-implemented external\n   * function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _tokenId Id for which we want uri.\n   * @param _uri String representing RFC 3986 URI.\n   */\n    function _setTokenUri(\n        uint256 _tokenId,\n        string memory _uri\n    )\n    validNFToken(_tokenId)\n    internal\n    {\n        idToUri[_tokenId] = _uri;\n    }\n\n  /**\n   * @dev Returns a descriptive name for a collection of NFTokens.\n   */\n    function name()\n    external\n    view\n    returns (string memory _name)\n    {\n        _name = nftName;\n    }\n\n  /**\n   * @dev Returns an abbreviated name for NFTokens.\n   */\n    function symbol()\n    external\n    view\n    returns (string memory _symbol)\n    {\n        _symbol = nftSymbol;\n    }\n\n  /**\n   * @dev A distinct URI (RFC 3986) for a given NFT.\n   * @param _tokenId Id for which we want uri.\n   */\n    function tokenURI(\n        uint256 _tokenId\n    )\n    validNFToken(_tokenId)\n    external\n    view\n    returns (string memory)\n    {\n        return idToUri[_tokenId];\n    }\n\n}\n",
  "sourcePath": "/home/kottackal/Desktop/IONIC Tutorial/organic-certification/contracts/NFTokenMetadata.sol",
  "ast": {
    "absolutePath": "project:/contracts/NFTokenMetadata.sol",
    "exportedSymbols": {
      "NFTokenMetadata": [
        2247
      ]
    },
    "id": 2248,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2140,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".16",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:32:10"
      },
      {
        "absolutePath": "project:/contracts/NFToken.sol",
        "file": "./NFToken.sol",
        "id": 2141,
        "nodeType": "ImportDirective",
        "scope": 2248,
        "sourceUnit": 1850,
        "src": "70:23:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 2142,
        "nodeType": "ImportDirective",
        "scope": 2248,
        "sourceUnit": 709,
        "src": "94:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2143,
              "name": "NFToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1849,
              "src": "246:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFToken_$1849",
                "typeString": "contract NFToken"
              }
            },
            "id": 2144,
            "nodeType": "InheritanceSpecifier",
            "src": "246:7:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2145,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 708,
              "src": "257:14:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$708",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 2146,
            "nodeType": "InheritanceSpecifier",
            "src": "257:14:10"
          }
        ],
        "contractDependencies": [
          664,
          708,
          1849,
          3167,
          3199
        ],
        "contractKind": "contract",
        "documentation": "@dev Optional metadata implementation for ERC-721 non-fungible token standard.",
        "fullyImplemented": true,
        "id": 2247,
        "linearizedBaseContracts": [
          2247,
          708,
          1849,
          3199,
          3167,
          664
        ],
        "name": "NFTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2148,
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 2247,
            "src": "346:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2147,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "346:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2150,
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 2247,
            "src": "432:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2149,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "432:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2154,
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 2247,
            "src": "523:44:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 2153,
              "keyType": {
                "id": 2151,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "532:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "523:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 2152,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "543:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2163,
              "nodeType": "Block",
              "src": "735:73:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2157,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3176,
                        "src": "745:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 2159,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783562356531333966",
                        "id": 2158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "765:10:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "745:31:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "779:4:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "745:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2162,
                  "nodeType": "ExpressionStatement",
                  "src": "745:38:10"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@notice When implementing this contract don't forget to set nftName and nftSymbol.",
            "id": 2164,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "717:2:10"
            },
            "returnParameters": {
              "id": 2156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "735:0:10"
            },
            "scope": 2247,
            "src": "706:102:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2193,
              "nodeType": "Block",
              "src": "1246:147:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2174,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2166,
                        "src": "1268:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2175,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2168,
                        "src": "1276:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2171,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3261,
                        "src": "1256:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadata_$2247",
                          "typeString": "contract super NFTokenMetadata"
                        }
                      },
                      "id": 2173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1697,
                      "src": "1256:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1256:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2177,
                  "nodeType": "ExpressionStatement",
                  "src": "1256:29:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2179,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2154,
                              "src": "1306:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 2181,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2180,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2168,
                              "src": "1314:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1306:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 2178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1300:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 2182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1300:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 2183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1300:31:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1335:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1300:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2192,
                  "nodeType": "IfStatement",
                  "src": "1296:91:10",
                  "trueBody": {
                    "id": 2191,
                    "nodeType": "Block",
                    "src": "1338:49:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "1352:24:10",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2186,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2154,
                              "src": "1359:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 2188,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2187,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2168,
                              "src": "1367:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1359:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2190,
                        "nodeType": "ExpressionStatement",
                        "src": "1352:24:10"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Burns a NFT.\n@notice This is a internal function which should be called from user-implemented external\nburn function. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _owner Address of the NFT owner.\n@param _tokenId ID of the NFT to be burned.",
            "id": 2194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2166,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2194,
                  "src": "1182:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2168,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2194,
                  "src": "1206:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1172:56:10"
            },
            "returnParameters": {
              "id": 2170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:10"
            },
            "scope": 2247,
            "src": "1158:235:10",
            "stateMutability": "nonpayable",
            "superFunction": 1697,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2210,
              "nodeType": "Block",
              "src": "1905:41:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2204,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2154,
                        "src": "1915:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 2206,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2205,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "1923:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1915:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2207,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2198,
                      "src": "1935:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1915:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2209,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:24:10"
                }
              ]
            },
            "documentation": "@dev Set a distinct URI (RFC 3986) for a given NFT ID.\n@notice this is a internal function which should be called from user-implemented external\nfunction. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _tokenId Id for which we want uri.\n@param _uri String representing RFC 3986 URI.",
            "id": 2211,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2201,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2196,
                    "src": "1878:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2202,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2200,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1107,
                  "src": "1865:12:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1865:22:10"
              }
            ],
            "name": "_setTokenUri",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2196,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2211,
                  "src": "1810:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2198,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 2211,
                  "src": "1836:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2197,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1836:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1800:60:10"
            },
            "returnParameters": {
              "id": 2203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1905:0:10"
            },
            "scope": 2247,
            "src": "1779:167:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2220,
              "nodeType": "Block",
              "src": "2107:32:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2216,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2214,
                      "src": "2117:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2217,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2148,
                      "src": "2125:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2117:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:15:10"
                }
              ]
            },
            "documentation": "@dev Returns a descriptive name for a collection of NFTokens.",
            "id": 2221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2044:2:10"
            },
            "returnParameters": {
              "id": 2215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2214,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "2082:19:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2213,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2081:21:10"
            },
            "scope": 2247,
            "src": "2031:108:10",
            "stateMutability": "view",
            "superFunction": 695,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2230,
              "nodeType": "Block",
              "src": "2289:36:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2226,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2224,
                      "src": "2299:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2227,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2150,
                      "src": "2309:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2299:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 2229,
                  "nodeType": "ExpressionStatement",
                  "src": "2299:19:10"
                }
              ]
            },
            "documentation": "@dev Returns an abbreviated name for NFTokens.",
            "id": 2231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2224:2:10"
            },
            "returnParameters": {
              "id": 2225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2224,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2231,
                  "src": "2262:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2262:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2261:23:10"
            },
            "scope": 2247,
            "src": "2209:116:10",
            "stateMutability": "view",
            "superFunction": 700,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2245,
              "nodeType": "Block",
              "src": "2574:41:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2241,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2154,
                      "src": "2591:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 2243,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2242,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2233,
                      "src": "2599:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2591:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2240,
                  "id": 2244,
                  "nodeType": "Return",
                  "src": "2584:24:10"
                }
              ]
            },
            "documentation": "@dev A distinct URI (RFC 3986) for a given NFT.\n@param _tokenId Id for which we want uri.",
            "id": 2246,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2236,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2233,
                    "src": "2510:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2237,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2235,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1107,
                  "src": "2497:12:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2497:22:10"
              }
            ],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2233,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2246,
                  "src": "2470:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2460:32:10"
            },
            "returnParameters": {
              "id": 2240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2239,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2246,
                  "src": "2555:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2238,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2555:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2554:15:10"
            },
            "scope": 2247,
            "src": "2443:172:10",
            "stateMutability": "view",
            "superFunction": 707,
            "visibility": "external"
          }
        ],
        "scope": 2248,
        "src": "216:2402:10"
      }
    ],
    "src": "36:2583:10"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/NFTokenMetadata.sol",
      "exportedSymbols": {
        "NFTokenMetadata": [
          2247
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".16",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 2140,
        "name": "PragmaDirective",
        "src": "36:32:10"
      },
      {
        "attributes": {
          "SourceUnit": 1850,
          "absolutePath": "project:/contracts/NFToken.sol",
          "file": "./NFToken.sol",
          "scope": 2248,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2141,
        "name": "ImportDirective",
        "src": "70:23:10"
      },
      {
        "attributes": {
          "SourceUnit": 709,
          "absolutePath": "project:/contracts/ERC721Metadata.sol",
          "file": "./ERC721Metadata.sol",
          "scope": 2248,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2142,
        "name": "ImportDirective",
        "src": "94:30:10"
      },
      {
        "attributes": {
          "contractDependencies": [
            664,
            708,
            1849,
            3167,
            3199
          ],
          "contractKind": "contract",
          "documentation": "@dev Optional metadata implementation for ERC-721 non-fungible token standard.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2247,
            708,
            1849,
            3199,
            3167,
            664
          ],
          "name": "NFTokenMetadata",
          "scope": 2248
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "NFToken",
                  "referencedDeclaration": 1849,
                  "type": "contract NFToken"
                },
                "id": 2143,
                "name": "UserDefinedTypeName",
                "src": "246:7:10"
              }
            ],
            "id": 2144,
            "name": "InheritanceSpecifier",
            "src": "246:7:10"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Metadata",
                  "referencedDeclaration": 708,
                  "type": "contract ERC721Metadata"
                },
                "id": 2145,
                "name": "UserDefinedTypeName",
                "src": "257:14:10"
              }
            ],
            "id": 2146,
            "name": "InheritanceSpecifier",
            "src": "257:14:10"
          },
          {
            "attributes": {
              "constant": false,
              "name": "nftName",
              "scope": 2247,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 2147,
                "name": "ElementaryTypeName",
                "src": "346:6:10"
              }
            ],
            "id": 2148,
            "name": "VariableDeclaration",
            "src": "346:23:10"
          },
          {
            "attributes": {
              "constant": false,
              "name": "nftSymbol",
              "scope": 2247,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 2149,
                "name": "ElementaryTypeName",
                "src": "432:6:10"
              }
            ],
            "id": 2150,
            "name": "VariableDeclaration",
            "src": "432:25:10"
          },
          {
            "attributes": {
              "constant": false,
              "name": "idToUri",
              "scope": 2247,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => string)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => string)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 2151,
                    "name": "ElementaryTypeName",
                    "src": "532:7:10"
                  },
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 2152,
                    "name": "ElementaryTypeName",
                    "src": "543:6:10"
                  }
                ],
                "id": 2153,
                "name": "Mapping",
                "src": "523:27:10"
              }
            ],
            "id": 2154,
            "name": "VariableDeclaration",
            "src": "523:44:10"
          },
          {
            "attributes": {
              "documentation": "@dev Contract constructor.\n@notice When implementing this contract don't forget to set nftName and nftSymbol.",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 2247,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2155,
                "name": "ParameterList",
                "src": "717:2:10"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2156,
                "name": "ParameterList",
                "src": "735:0:10"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3176,
                                  "type": "mapping(bytes4 => bool)",
                                  "value": "supportedInterfaces"
                                },
                                "id": 2157,
                                "name": "Identifier",
                                "src": "745:19:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30783562356531333966",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1532892063",
                                  "value": "0x5b5e139f"
                                },
                                "id": 2158,
                                "name": "Literal",
                                "src": "765:10:10"
                              }
                            ],
                            "id": 2159,
                            "name": "IndexAccess",
                            "src": "745:31:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 2160,
                            "name": "Literal",
                            "src": "779:4:10"
                          }
                        ],
                        "id": 2161,
                        "name": "Assignment",
                        "src": "745:38:10"
                      }
                    ],
                    "id": 2162,
                    "name": "ExpressionStatement",
                    "src": "745:38:10"
                  }
                ],
                "id": 2163,
                "name": "Block",
                "src": "735:73:10"
              }
            ],
            "id": 2164,
            "name": "FunctionDefinition",
            "src": "706:102:10"
          },
          {
            "attributes": {
              "documentation": "@dev Burns a NFT.\n@notice This is a internal function which should be called from user-implemented external\nburn function. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _owner Address of the NFT owner.\n@param _tokenId ID of the NFT to be burned.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_burn",
              "scope": 2247,
              "stateMutability": "nonpayable",
              "superFunction": 1697,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_owner",
                      "scope": 2194,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2165,
                        "name": "ElementaryTypeName",
                        "src": "1182:7:10"
                      }
                    ],
                    "id": 2166,
                    "name": "VariableDeclaration",
                    "src": "1182:14:10"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 2194,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2167,
                        "name": "ElementaryTypeName",
                        "src": "1206:7:10"
                      }
                    ],
                    "id": 2168,
                    "name": "VariableDeclaration",
                    "src": "1206:16:10"
                  }
                ],
                "id": 2169,
                "name": "ParameterList",
                "src": "1172:56:10"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2170,
                "name": "ParameterList",
                "src": "1246:0:10"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_burn",
                              "referencedDeclaration": 1697,
                              "type": "function (address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3261,
                                  "type": "contract super NFTokenMetadata",
                                  "value": "super"
                                },
                                "id": 2171,
                                "name": "Identifier",
                                "src": "1256:5:10"
                              }
                            ],
                            "id": 2173,
                            "name": "MemberAccess",
                            "src": "1256:11:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2166,
                              "type": "address",
                              "value": "_owner"
                            },
                            "id": 2174,
                            "name": "Identifier",
                            "src": "1268:6:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2168,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 2175,
                            "name": "Identifier",
                            "src": "1276:8:10"
                          }
                        ],
                        "id": 2176,
                        "name": "FunctionCall",
                        "src": "1256:29:10"
                      }
                    ],
                    "id": 2177,
                    "name": "ExpressionStatement",
                    "src": "1256:29:10"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes storage pointer",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes storage pointer)",
                                      "value": "bytes"
                                    },
                                    "id": 2178,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1300:5:10"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "string storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2154,
                                          "type": "mapping(uint256 => string storage ref)",
                                          "value": "idToUri"
                                        },
                                        "id": 2179,
                                        "name": "Identifier",
                                        "src": "1306:7:10"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2168,
                                          "type": "uint256",
                                          "value": "_tokenId"
                                        },
                                        "id": 2180,
                                        "name": "Identifier",
                                        "src": "1314:8:10"
                                      }
                                    ],
                                    "id": 2181,
                                    "name": "IndexAccess",
                                    "src": "1306:17:10"
                                  }
                                ],
                                "id": 2182,
                                "name": "FunctionCall",
                                "src": "1300:24:10"
                              }
                            ],
                            "id": 2183,
                            "name": "MemberAccess",
                            "src": "1300:31:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2184,
                            "name": "Literal",
                            "src": "1335:1:10"
                          }
                        ],
                        "id": 2185,
                        "name": "BinaryOperation",
                        "src": "1300:36:10"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "delete",
                                  "prefix": true,
                                  "type": "tuple()"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "string storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2154,
                                          "type": "mapping(uint256 => string storage ref)",
                                          "value": "idToUri"
                                        },
                                        "id": 2186,
                                        "name": "Identifier",
                                        "src": "1359:7:10"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2168,
                                          "type": "uint256",
                                          "value": "_tokenId"
                                        },
                                        "id": 2187,
                                        "name": "Identifier",
                                        "src": "1367:8:10"
                                      }
                                    ],
                                    "id": 2188,
                                    "name": "IndexAccess",
                                    "src": "1359:17:10"
                                  }
                                ],
                                "id": 2189,
                                "name": "UnaryOperation",
                                "src": "1352:24:10"
                              }
                            ],
                            "id": 2190,
                            "name": "ExpressionStatement",
                            "src": "1352:24:10"
                          }
                        ],
                        "id": 2191,
                        "name": "Block",
                        "src": "1338:49:10"
                      }
                    ],
                    "id": 2192,
                    "name": "IfStatement",
                    "src": "1296:91:10"
                  }
                ],
                "id": 2193,
                "name": "Block",
                "src": "1246:147:10"
              }
            ],
            "id": 2194,
            "name": "FunctionDefinition",
            "src": "1158:235:10"
          },
          {
            "attributes": {
              "documentation": "@dev Set a distinct URI (RFC 3986) for a given NFT ID.\n@notice this is a internal function which should be called from user-implemented external\nfunction. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _tokenId Id for which we want uri.\n@param _uri String representing RFC 3986 URI.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "_setTokenUri",
              "scope": 2247,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 2211,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2195,
                        "name": "ElementaryTypeName",
                        "src": "1810:7:10"
                      }
                    ],
                    "id": 2196,
                    "name": "VariableDeclaration",
                    "src": "1810:16:10"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_uri",
                      "scope": 2211,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2197,
                        "name": "ElementaryTypeName",
                        "src": "1836:6:10"
                      }
                    ],
                    "id": 2198,
                    "name": "VariableDeclaration",
                    "src": "1836:18:10"
                  }
                ],
                "id": 2199,
                "name": "ParameterList",
                "src": "1800:60:10"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2203,
                "name": "ParameterList",
                "src": "1905:0:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1107,
                      "type": "modifier (uint256)",
                      "value": "validNFToken"
                    },
                    "id": 2200,
                    "name": "Identifier",
                    "src": "1865:12:10"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2196,
                      "type": "uint256",
                      "value": "_tokenId"
                    },
                    "id": 2201,
                    "name": "Identifier",
                    "src": "1878:8:10"
                  }
                ],
                "id": 2202,
                "name": "ModifierInvocation",
                "src": "1865:22:10"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2154,
                                  "type": "mapping(uint256 => string storage ref)",
                                  "value": "idToUri"
                                },
                                "id": 2204,
                                "name": "Identifier",
                                "src": "1915:7:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2196,
                                  "type": "uint256",
                                  "value": "_tokenId"
                                },
                                "id": 2205,
                                "name": "Identifier",
                                "src": "1923:8:10"
                              }
                            ],
                            "id": 2206,
                            "name": "IndexAccess",
                            "src": "1915:17:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2198,
                              "type": "string memory",
                              "value": "_uri"
                            },
                            "id": 2207,
                            "name": "Identifier",
                            "src": "1935:4:10"
                          }
                        ],
                        "id": 2208,
                        "name": "Assignment",
                        "src": "1915:24:10"
                      }
                    ],
                    "id": 2209,
                    "name": "ExpressionStatement",
                    "src": "1915:24:10"
                  }
                ],
                "id": 2210,
                "name": "Block",
                "src": "1905:41:10"
              }
            ],
            "id": 2211,
            "name": "FunctionDefinition",
            "src": "1779:167:10"
          },
          {
            "attributes": {
              "documentation": "@dev Returns a descriptive name for a collection of NFTokens.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "name",
              "scope": 2247,
              "stateMutability": "view",
              "superFunction": 695,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2212,
                "name": "ParameterList",
                "src": "2044:2:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 2221,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2213,
                        "name": "ElementaryTypeName",
                        "src": "2082:6:10"
                      }
                    ],
                    "id": 2214,
                    "name": "VariableDeclaration",
                    "src": "2082:19:10"
                  }
                ],
                "id": 2215,
                "name": "ParameterList",
                "src": "2081:21:10"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2214,
                              "type": "string memory",
                              "value": "_name"
                            },
                            "id": 2216,
                            "name": "Identifier",
                            "src": "2117:5:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2148,
                              "type": "string storage ref",
                              "value": "nftName"
                            },
                            "id": 2217,
                            "name": "Identifier",
                            "src": "2125:7:10"
                          }
                        ],
                        "id": 2218,
                        "name": "Assignment",
                        "src": "2117:15:10"
                      }
                    ],
                    "id": 2219,
                    "name": "ExpressionStatement",
                    "src": "2117:15:10"
                  }
                ],
                "id": 2220,
                "name": "Block",
                "src": "2107:32:10"
              }
            ],
            "id": 2221,
            "name": "FunctionDefinition",
            "src": "2031:108:10"
          },
          {
            "attributes": {
              "documentation": "@dev Returns an abbreviated name for NFTokens.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "symbol",
              "scope": 2247,
              "stateMutability": "view",
              "superFunction": 700,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2222,
                "name": "ParameterList",
                "src": "2224:2:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_symbol",
                      "scope": 2231,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2223,
                        "name": "ElementaryTypeName",
                        "src": "2262:6:10"
                      }
                    ],
                    "id": 2224,
                    "name": "VariableDeclaration",
                    "src": "2262:21:10"
                  }
                ],
                "id": 2225,
                "name": "ParameterList",
                "src": "2261:23:10"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2224,
                              "type": "string memory",
                              "value": "_symbol"
                            },
                            "id": 2226,
                            "name": "Identifier",
                            "src": "2299:7:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2150,
                              "type": "string storage ref",
                              "value": "nftSymbol"
                            },
                            "id": 2227,
                            "name": "Identifier",
                            "src": "2309:9:10"
                          }
                        ],
                        "id": 2228,
                        "name": "Assignment",
                        "src": "2299:19:10"
                      }
                    ],
                    "id": 2229,
                    "name": "ExpressionStatement",
                    "src": "2299:19:10"
                  }
                ],
                "id": 2230,
                "name": "Block",
                "src": "2289:36:10"
              }
            ],
            "id": 2231,
            "name": "FunctionDefinition",
            "src": "2209:116:10"
          },
          {
            "attributes": {
              "documentation": "@dev A distinct URI (RFC 3986) for a given NFT.\n@param _tokenId Id for which we want uri.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "tokenURI",
              "scope": 2247,
              "stateMutability": "view",
              "superFunction": 707,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 2246,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2232,
                        "name": "ElementaryTypeName",
                        "src": "2470:7:10"
                      }
                    ],
                    "id": 2233,
                    "name": "VariableDeclaration",
                    "src": "2470:16:10"
                  }
                ],
                "id": 2234,
                "name": "ParameterList",
                "src": "2460:32:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2246,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2238,
                        "name": "ElementaryTypeName",
                        "src": "2555:6:10"
                      }
                    ],
                    "id": 2239,
                    "name": "VariableDeclaration",
                    "src": "2555:13:10"
                  }
                ],
                "id": 2240,
                "name": "ParameterList",
                "src": "2554:15:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1107,
                      "type": "modifier (uint256)",
                      "value": "validNFToken"
                    },
                    "id": 2235,
                    "name": "Identifier",
                    "src": "2497:12:10"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2233,
                      "type": "uint256",
                      "value": "_tokenId"
                    },
                    "id": 2236,
                    "name": "Identifier",
                    "src": "2510:8:10"
                  }
                ],
                "id": 2237,
                "name": "ModifierInvocation",
                "src": "2497:22:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 2240
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2154,
                              "type": "mapping(uint256 => string storage ref)",
                              "value": "idToUri"
                            },
                            "id": 2241,
                            "name": "Identifier",
                            "src": "2591:7:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2233,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 2242,
                            "name": "Identifier",
                            "src": "2599:8:10"
                          }
                        ],
                        "id": 2243,
                        "name": "IndexAccess",
                        "src": "2591:17:10"
                      }
                    ],
                    "id": 2244,
                    "name": "Return",
                    "src": "2584:24:10"
                  }
                ],
                "id": 2245,
                "name": "Block",
                "src": "2574:41:10"
              }
            ],
            "id": 2246,
            "name": "FunctionDefinition",
            "src": "2443:172:10"
          }
        ],
        "id": 2247,
        "name": "ContractDefinition",
        "src": "216:2402:10"
      }
    ],
    "id": 2248,
    "name": "SourceUnit",
    "src": "36:2583:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-08-12T05:08:34.290Z",
  "devdoc": {
    "details": "Optional metadata implementation for ERC-721 non-fungible token standard.",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        }
      },
      "constructor": {
        "details": "Contract constructor."
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens."
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        }
      },
      "safe(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens."
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "constructor": "When implementing this contract don't forget to set nftName and nftSymbol.",
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safe(address,address,uint256)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    }
  }
}